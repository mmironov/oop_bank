package com.musala.trainings.customers;

import com.musala.trainings.accounts.Account;
import com.musala.trainings.payments.Payment;

import java.util.List;

public class Customer {

    private String email;
    private List<Account> accounts;

    public Payment createPayment(String parameters) {
        return new Payment();
    }

    public boolean executePayment() {
        return true;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public List<Account> getAccounts() {
        return accounts;
    }

    public void setAccounts(List<Account> accounts) {
        this.accounts = accounts;
    }
}

/**
 * The users can initiate payments.
 * Payments have needed steps to execute. For instance:
 * Own payment:
 *  - initialize
 *  - if the amount is < 1000 EUR execute without authorization
 *  - if the amount is >= 1000 EUR execute with password
 *  -confirm
 *  Payment to another account:
 *  - initialize
 *  - check validity of the recipients IBAN
 *  - if the amount < 250 EUR execute with password
 *  - if the amount >= 250 EUR execute with password and a one-time PIN generated by a phisical device
 *  -confirm
 *  PayPal payment:
 *  - initialize
 *  - get a token to a successful login within PayPal
 *  - validate data (amount)
 *  - validate recipients email (that there is actually a PayPal account with such credentials)
 *  - execute
 *
 *  You have to make it easier for third party developers to add a new type of payment.
 *  You have to make it easier to add a new step or change an existing one to an already existing payment.
 *  All those changes should result in a minimum changes in the already implemented payments.
 **/